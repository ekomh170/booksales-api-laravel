{
	"info": {
		"_postman_id": "pertemuan-7-transactions",
		"name": "Pertemuan 7 - Booksales API (Transactions CRUD)",
		"description": "Collection untuk testing CRUD Transactions dengan Authorization:\n- Create, Update, Show: auth:sanctum (customer yang sudah login)\n- Read All, Destroy: auth:sanctum + admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Autentikasi",
			"item": [
				{
					"name": "Login sebagai Customer (user@booksales.com)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.environment.set(\"customer_token\", jsonData.data.token);",
									"        pm.environment.set(\"customer_id\", jsonData.data.user.id);",
									"        console.log(\"Customer token saved:\", jsonData.data.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@booksales.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login sebagai Customer (akbar@booksales.com)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.environment.set(\"customer2_token\", jsonData.data.token);",
									"        pm.environment.set(\"customer2_id\", jsonData.data.user.id);",
									"        console.log(\"Customer 2 token saved:\", jsonData.data.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"akbar@booksales.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login sebagai Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.environment.set(\"admin_token\", jsonData.data.token);",
									"        console.log(\"Admin token saved:\", jsonData.data.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@booksales.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Transaksi - Operasi Customer",
			"item": [
				{
					"name": "Buat Transaksi (Customer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.id) {",
									"        pm.environment.set(\"transaction_id\", jsonData.data.id);",
									"        pm.environment.set(\"order_number\", jsonData.data.order_number);",
									"        console.log(\"Transaction created with ID:\", jsonData.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"book_id\": 1,\n    \"total_amount\": 150000\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lihat Transaksi Sendiri (Customer)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Transaksi Sendiri (Customer)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"book_id\": 2,\n    \"total_amount\": 200000\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions/{{transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Transaksi - Tes Otorisasi",
			"item": [
				{
					"name": "Coba Lihat Transaksi User Lain (Harus Gagal 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Should have error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"    pm.expect(jsonData.message).to.include('tidak memiliki akses');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer2_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions",
								"{{transaction_id}}"
							]
						},
						"description": "Customer 2 mencoba melihat transaksi milik Customer 1"
					},
					"response": []
				},
				{
					"name": "Customer Coba Lihat Semua Transaksi (Harus Gagal 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions"
							]
						},
						"description": "Customer mencoba melihat semua transaksi (hanya admin yang bisa)"
					},
					"response": []
				},
				{
					"name": "Customer Coba Hapus Transaksi (Harus Gagal 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions",
								"{{transaction_id}}"
							]
						},
						"description": "Customer mencoba menghapus transaksi (hanya admin yang bisa)"
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Transaksi - Operasi Admin",
			"item": [
				{
					"name": "Lihat Semua Transaksi (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has transactions array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Transactions include relations\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        pm.expect(jsonData.data[0]).to.have.property('customer');",
									"        pm.expect(jsonData.data[0]).to.have.property('book');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hapus Transaksi (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Transaction deleted successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.message).to.include('dihapus');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Buku - Lihat Semua (Untuk Referensi)",
			"item": [
				{
					"name": "Lihat Semua Buku",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has books data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"    if (jsonData.data.length > 0) {",
									"        console.log(\"Available Book IDs:\");",
									"        jsonData.data.forEach(function(book) {",
									"            console.log(\"ID: \" + book.id + \" - \" + book.title);",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books"
							]
						},
						"description": "Mendapatkan daftar buku untuk referensi book_id saat membuat transaksi"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
